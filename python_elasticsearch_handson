Macbooks-MBP:flaskapp macbook$ pip3.8 install virtualenv
Collecting virtualenv
  Downloading virtualenv-20.8.0-py2.py3-none-any.whl (5.3 MB)
     |████████████████████████████████| 5.3 MB 745 kB/s 
Requirement already satisfied: six<2,>=1.9.0 in /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages (from virtualenv) (1.15.0)
Collecting filelock<4,>=3.0.0
  Downloading filelock-3.0.12-py3-none-any.whl (7.6 kB)
Collecting platformdirs<3,>=2
  Downloading platformdirs-2.3.0-py3-none-any.whl (13 kB)
Collecting distlib<1,>=0.3.1
  Downloading distlib-0.3.2-py2.py3-none-any.whl (338 kB)
     |████████████████████████████████| 338 kB 873 kB/s 
Collecting backports.entry-points-selectable>=1.0.4
  Downloading backports.entry_points_selectable-1.1.0-py2.py3-none-any.whl (6.2 kB)
Installing collected packages: platformdirs, filelock, distlib, backports.entry-points-selectable, virtualenv
Successfully installed backports.entry-points-selectable-1.1.0 distlib-0.3.2 filelock-3.0.12 platformdirs-2.3.0 virtualenv-20.8.0
Macbooks-MBP:flaskapp macbook$ python3 -m virtualenv venv
created virtual environment CPython3.8.0.final.0-64 in 1617ms
  creator CPython3Posix(dest=/Users/macbook/flaskapp/venv, clear=False, no_vcs_ignore=False, global=False)
  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/macbook/Library/Application Support/virtualenv)
    added seed packages: pip==21.2.4, setuptools==58.0.4, wheel==0.37.0
  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator
Macbooks-MBP:flaskapp macbook$ ls -lart
total 0
drwxr-xr-x+ 58 macbook  staff  1856 Sep 20 23:03 ..
drwxr-xr-x   3 macbook  staff    96 Sep 20 23:05 .
drwxr-xr-x   6 macbook  staff   192 Sep 20 23:05 venv
Macbooks-MBP:flaskapp macbook$ source venv/bin/activate
(venv) Macbooks-MBP:flaskapp macbook$ env pip list
Package    Version
---------- -------
pip        21.2.4
setuptools 58.0.4
wheel      0.37.0
(venv) Macbooks-MBP:flaskapp macbook$ pip install elasticsearch
Collecting elasticsearch
  Downloading elasticsearch-7.14.1-py2.py3-none-any.whl (363 kB)
     |████████████████████████████████| 363 kB 573 kB/s 
Collecting certifi
  Using cached certifi-2021.5.30-py2.py3-none-any.whl (145 kB)
Collecting urllib3<2,>=1.21.1
  Using cached urllib3-1.26.6-py2.py3-none-any.whl (138 kB)
Installing collected packages: urllib3, certifi, elasticsearch
Successfully installed certifi-2021.5.30 elasticsearch-7.14.1 urllib3-1.26.6
(venv) Macbooks-MBP:flaskapp macbook$ python
Python 3.8.0 (v3.8.0:fa919fdf25, Oct 14 2019, 10:23:27) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from elasticsearch import Elasticsearch
>>> es=Elasticsearch(HOST="http://localhost",PORT=9200)
>>> es.indices.create(index="my_index",ignore=400)
{'acknowledged': True, 'shards_acknowledged': True, 'index': 'my_index'}
>>> es.indices.exist('myindex')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'IndicesClient' object has no attribute 'exist'
>>> es.indices.exist(index='myindex')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'IndicesClient' object has no attribute 'exist'
>>> es.indices.exists(index='myindex')
False
>>> es.indices.exists(index='my_index')
True
>>> es.indices.delete(index="my_index")
{'acknowledged': True}
>>> es.indices.exists(index='my_index')
False
>>> 
>>> doc1={"city":"Hyderabad","country":"India"}
>>> doc2={"city":"Bengaluru","country":"India"}
>>> doc3={"city":"Chennai","country":"India"}
>>> es.index(index="cities",doc_type="places",id=1,body=doc1}
  File "<stdin>", line 1
SyntaxError: closing parenthesis '}' does not match opening parenthesis '('
>>> es.index(index="cities",doc_type="places",id=1,body=doc1)}
  File "<stdin>", line 1
SyntaxError: unmatched '}'
>>> es.index(index="cities",doc_type="places",id=1,body=doc1)
/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/connection/base.py:208: ElasticsearchWarning: [types removal] Specifying types in document index requests is deprecated, use the typeless endpoints instead (/{index}/_doc/{id}, /{index}/_doc, or /{index}/_create/{id}).
  warnings.warn(message, category=ElasticsearchWarning)
{'_index': 'cities', '_type': 'places', '_id': '1', '_version': 1, 'result': 'created', '_shards': {'total': 2, 'successful': 1, 'failed': 0}, '_seq_no': 0, '_primary_term': 1}
>>> es.index(index="cities",doc_type="places",id=2,body="doc2")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/client/utils.py", line 168, in _wrapped
    return func(*args, params=params, headers=headers, **kwargs)
  File "/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/client/__init__.py", line 406, in index
    return self.transport.perform_request(
  File "/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/transport.py", line 458, in perform_request
    raise e
  File "/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/transport.py", line 419, in perform_request
    status, headers_response, data = connection.perform_request(
  File "/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/connection/http_urllib3.py", line 277, in perform_request
    self._raise_error(response.status, raw_data)
  File "/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/connection/base.py", line 330, in _raise_error
    raise HTTP_EXCEPTIONS.get(status_code, TransportError)(
elasticsearch.exceptions.RequestError: RequestError(400, 'mapper_parsing_exception', 'failed to parse')
>>> es.index(index="cities",doc_type="places",id=2,body=doc2)
{'_index': 'cities', '_type': 'places', '_id': '2', '_version': 1, 'result': 'created', '_shards': {'total': 2, 'successful': 1, 'failed': 0}, '_seq_no': 1, '_primary_term': 1}
>>> es.index(index="cities",doc_type="places",id=3,body=doc3)
{'_index': 'cities', '_type': 'places', '_id': '3', '_version': 1, 'result': 'created', '_shards': {'total': 2, 'successful': 1, 'failed': 0}, '_seq_no': 2, '_primary_term': 1}
>>> 

>>> result=es.get(index="cities",doc_type="places",id=2)
/Users/macbook/flaskapp/venv/lib/python3.8/site-packages/elasticsearch/connection/base.py:208: ElasticsearchWarning: [types removal] Specifying types in document get requests is deprecated, use the /{index}/_doc/{id} endpoint instead.
  warnings.warn(message, category=ElasticsearchWarning)
>>> result=es.get(index="cities",id=2)
>>> result
{'_index': 'cities', '_type': '_doc', '_id': '2', '_version': 1, '_seq_no': 1, '_primary_term': 1, 'found': True, '_source': {'city': 'Bengaluru', 'country': 'India'}}
>>> result['_source']
{'city': 'Bengaluru', 'country': 'India'}
>>> 
>>> doc1={"sentence":"Today is a sunny day."}
>>> doc2={"sentence":"Today is a bright-sunny day"}
>>> res=es.index(index="english",doc_type="language",id=1,body=doc1)
>>> res
{'_index': 'english', '_type': 'language', '_id': '1', '_version': 1, 'result': 'created', '_shards': {'total': 2, 'successful': 1, 'failed': 0}, '_seq_no': 0, '_primary_term': 1}
>>> es.search(index="english",body={"from":0,"size":0,"query":{"bool":{"must_not":{"match":{"sentence":"bright"}},"should":{"match":{"sentence": "sunny"}}}}})
{'took': 17, 'timed_out': False, '_shards': {'total': 1, 'successful': 1, 'skipped': 0, 'failed': 0}, 'hits': {'total': {'value': 1, 'relation': 'eq'}, 'max_score': None, 'hits': []}}
>>> es.search(index="english",body={"from":0,"size":1,"query":{"bool":{"must_not":{"match":{"sentence":"bright"}},"should":{"match":{"sentence": "sunny"}}}}})
{'took': 29, 'timed_out': False, '_shards': {'total': 1, 'successful': 1, 'skipped': 0, 'failed': 0}, 'hits': {'total': {'value': 1, 'relation': 'eq'}, 'max_score': 0.18936403, 'hits': [{'_index': 'english', '_type': 'language', '_id': '1', '_score': 0.18936403, '_source': {'sentence': 'Today is a sunny day.'}}]}}
>>> 
